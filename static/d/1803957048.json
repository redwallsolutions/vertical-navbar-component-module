{"data":{"doczDb":{"id":"ace00e2b-9c46-5e24-a19a-5ed242ca9c64","db":"{\"config\":{\"title\":\"Vertical Navbar Component Module\",\"description\":\"My awesome app using docz\",\"menu\":[],\"version\":\"3.2.3\",\"repository\":\"https://github.com/redwallsolutions/vertical-navbar-component-module\",\"native\":false,\"themeConfig\":{},\"separator\":\"-\",\"typescript\":true,\"ignore\":[\"README.md\"],\"base\":\"/vertical-navbar-component-module/\",\"dest\":\"demo/output\"},\"entries\":[{\"key\":\"doc.mdx\",\"value\":{\"name\":\"Vertical Navbar Component Module\",\"route\":\"/\",\"id\":\"bc4464e8c5b1bc214702181c2140b0a4\",\"filepath\":\"doc.mdx\",\"fullpath\":\"/home/ribeiro/Development/vertical-navbar-component-module/doc.mdx\",\"link\":\"https://github.com/redwallsolutions/vertical-navbar-component-module/edit/master/doc.mdx\",\"slug\":\"doc\",\"menu\":\"\",\"headings\":[{\"slug\":\"introduction\",\"depth\":2,\"value\":\"Introduction\"},{\"slug\":\"props\",\"depth\":2,\"value\":\"Props\"},{\"slug\":\"usage\",\"depth\":2,\"value\":\"Usage\"},{\"slug\":\"hooks\",\"depth\":2,\"value\":\"Hooks\"}]}}],\"props\":[{\"key\":\"src/index.tsx\",\"value\":[]},{\"key\":\"src/lib/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"lib\",\"methods\":[],\"props\":{\"items\":{\"defaultValue\":null,\"description\":\"The items prop is an Array of  `IItemProps`  that defines all items to be displayed along the navbar.\\nEach item in the array consists of:\\n\\n- `name:string`\\n- `icon:ReactNode`\\n- `handler:Function`\\n\\nExample:  `items: [{name: 'Dashboard', icon: <DashboardIcon/>, handler: ()=>console.log('dashboard clicked')}]`\",\"name\":\"items\",\"parent\":{\"fileName\":\"/home/ribeiro/Development/vertical-navbar-component-module/src/lib/components/interfaces.ts\",\"name\":\"INavbarProps\"},\"required\":true,\"type\":{\"name\":\"IItemProps[]\"}},\"logo\":{\"defaultValue\":null,\"description\":\"The logo prop defines an image logo that will be displayed at the top of navbar. It's hidden when navbar is horizontal. (Responsive mode)\",\"name\":\"logo\",\"parent\":{\"fileName\":\"/home/ribeiro/Development/vertical-navbar-component-module/src/lib/components/interfaces.ts\",\"name\":\"INavbarProps\"},\"required\":true,\"type\":{\"name\":\"string\"}}}}]},{\"key\":\"src/lib/components/Style.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"Reset\",\"methods\":[],\"props\":{\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"DefaultTheme | undefined\"}},\"suppressMultiMountWarning\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"suppressMultiMountWarning\",\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}}}},{\"description\":\"\",\"displayName\":\"VerticalNavbarContainer\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}},{\"description\":\"\",\"displayName\":\"VerticalNavbarScrollWrapper\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined\"}},\"isMobileOrTablet\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"isMobileOrTablet\",\"parent\":{\"fileName\":\"/home/ribeiro/Development/vertical-navbar-component-module/src/lib/components/interfaces.ts\",\"name\":\"INavbarPieces\"},\"required\":true,\"type\":{\"name\":\"boolean\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}},{\"description\":\"\",\"displayName\":\"VerticalNavbarStyled\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLElement | null) => void) | RefObject<HTMLElement> | null | undefined\"}},\"isMobileOrTablet\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"isMobileOrTablet\",\"parent\":{\"fileName\":\"/home/ribeiro/Development/vertical-navbar-component-module/src/lib/components/interfaces.ts\",\"name\":\"INavbarPieces\"},\"required\":true,\"type\":{\"name\":\"boolean\"}},\"amountOfItems\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"amountOfItems\",\"parent\":{\"fileName\":\"/home/ribeiro/Development/vertical-navbar-component-module/src/lib/components/interfaces.ts\",\"name\":\"INavbarResponsive\"},\"required\":true,\"type\":{\"name\":\"number\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}},{\"description\":\"\",\"displayName\":\"VerticalNavbarHeaderStyled\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLElement | null) => void) | RefObject<HTMLElement> | null | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}},{\"description\":\"\",\"displayName\":\"ContentContainer\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined\"}},\"isMobileOrTablet\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"isMobileOrTablet\",\"parent\":{\"fileName\":\"/home/ribeiro/Development/vertical-navbar-component-module/src/lib/components/interfaces.ts\",\"name\":\"INavbarPieces\"},\"required\":true,\"type\":{\"name\":\"boolean\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}},{\"description\":\"\",\"displayName\":\"VerticalNavbarItemStyled\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined\"}},\"isMobileOrTablet\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"isMobileOrTablet\",\"parent\":{\"fileName\":\"/home/ribeiro/Development/vertical-navbar-component-module/src/lib/components/interfaces.ts\",\"name\":\"INavbarPieces\"},\"required\":true,\"type\":{\"name\":\"boolean\"}},\"amountOfItems\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"amountOfItems\",\"parent\":{\"fileName\":\"/home/ribeiro/Development/vertical-navbar-component-module/src/lib/components/interfaces.ts\",\"name\":\"INavbarResponsive\"},\"required\":true,\"type\":{\"name\":\"number\"}},\"isActive\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"isActive\",\"parent\":{\"fileName\":\"/home/ribeiro/Development/vertical-navbar-component-module/src/lib/components/interfaces.ts\",\"name\":\"INavbarResponsiveItem\"},\"required\":true,\"type\":{\"name\":\"boolean\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}}]},{\"key\":\"src/lib/components/VerticalNavbarComponent.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"VerticalNavbarComponent\",\"methods\":[],\"props\":{\"items\":{\"defaultValue\":{\"value\":null},\"description\":\"The items prop is an Array of  `IItemProps`  that defines all items to be displayed along the navbar.\\nEach item in the array consists of:\\n\\n- `name:string`\\n- `icon:ReactNode`\\n- `handler:Function`\\n\\nExample:  `items: [{name: 'Dashboard', icon: <DashboardIcon/>, handler: ()=>console.log('dashboard clicked')}]`\",\"name\":\"items\",\"parent\":{\"fileName\":\"/home/ribeiro/Development/vertical-navbar-component-module/src/lib/components/interfaces.ts\",\"name\":\"INavbarProps\"},\"required\":false,\"type\":{\"name\":\"IItemProps[]\"}},\"logo\":{\"defaultValue\":null,\"description\":\"The logo prop defines an image logo that will be displayed at the top of navbar. It's hidden when navbar is horizontal. (Responsive mode)\",\"name\":\"logo\",\"parent\":{\"fileName\":\"/home/ribeiro/Development/vertical-navbar-component-module/src/lib/components/interfaces.ts\",\"name\":\"INavbarProps\"},\"required\":true,\"type\":{\"name\":\"string\"}}}}]},{\"key\":\"src/lib/components/VerticalNavbarContext.ts\",\"value\":[]}]}"}}}